<!--
  如需如何設定 ASP.NET 應用程式的詳細資訊，請前往
  https://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <sectionGroup name="devExpress">
      <section name="themes" type="DevExpress.Web.ThemesConfigurationSection, DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="compression" type="DevExpress.Web.CompressionConfigurationSection, DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="settings" type="DevExpress.Web.SettingsConfigurationSection, DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="errors" type="DevExpress.Web.ErrorsConfigurationSection, DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="resources" type="DevExpress.Web.ResourcesConfigurationSection, DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
      <section name="bootstrap" type="DevExpress.Web.Bootstrap.BootstrapConfigurationSection, DevExpress.Web.Bootstrap.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <system.web>
    <compilation debug="true" targetFramework="4.7.2">
      <buildProviders>
        <add extension=".rdlc" type="Microsoft.Reporting.RdlBuildProvider, Microsoft.ReportViewer.WebForms, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845DCD8080CC91" />
      </buildProviders>
      <assemblies>
        <add assembly="Microsoft.ReportViewer.Common, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845DCD8080CC91" />
        <add assembly="Microsoft.ReportViewer.WebForms, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845DCD8080CC91" />
        <add assembly="DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />
        <add assembly="DevExpress.Data.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />
        <add assembly="System.Web.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A" />
        <add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089" />
        <add assembly="DevExpress.Printing.v20.1.Core, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />
        <!--<add assembly="DevExpress.Office.v20.1.Core, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />-->
        <add assembly="DevExpress.RichEdit.v20.1.Core, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />
        <add assembly="DevExpress.Web.ASPxThemes.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
        <add assembly="DevExpress.Web.Bootstrap.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />
        <add assembly="DevExpress.Web.ASPxRichEdit.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />
        <add assembly="DevExpress.Web.ASPxSpreadsheet.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />
        <add assembly="DevExpress.Spreadsheet.v20.1.Core, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />
        <add assembly="DevExpress.Web.ASPxScheduler.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />
        <add assembly="DevExpress.XtraScheduler.v20.1.Core, Version=20.1.7.0, Culture=neutral, PublicKeyToken=B88D1754D700E49A" />
      </assemblies>
    </compilation>
    <httpRuntime targetFramework="4.7.2" />
    <pages>
      <namespaces>
        <add namespace="System.Web.Optimization" />
      </namespaces>
      <controls>
        <add assembly="Microsoft.AspNet.Web.Optimization.WebForms" namespace="Microsoft.AspNet.Web.Optimization.WebForms" tagPrefix="webopt" />
      </controls>
    </pages>
    <httpHandlers>
      <add path="Reserved.ReportViewerWebControl.axd" verb="*" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845DCD8080CC91" validate="false" />
      <add type="DevExpress.Web.ASPxHttpHandlerModule, DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" verb="GET" path="DX.ashx" validate="false" />
    </httpHandlers>
    <httpModules>
      <add type="DevExpress.Web.ASPxHttpHandlerModule, DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" name="ASPxHttpHandlerModule" />
    </httpModules>
  </system.web>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Antlr3.Runtime" publicKeyToken="eb42632606e9261f" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.2" newVersion="3.5.0.2" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" />
        <bindingRedirect oldVersion="0.0.0.0-12.0.0.0" newVersion="12.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:1659;1699;1701" />
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=2.0.1.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:default /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+" />
    </compilers>
  </system.codedom>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <handlers>
      <add name="ReportViewerWebControlHandler" preCondition="integratedMode" verb="*" path="Reserved.ReportViewerWebControl.axd" type="Microsoft.Reporting.WebForms.HttpHandler, Microsoft.ReportViewer.WebForms, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
      <add type="DevExpress.Web.ASPxHttpHandlerModule, DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" verb="GET" path="DX.ashx" name="ASPxHttpHandlerModule" preCondition="integratedMode" />
    </handlers>
    <modules runAllManagedModulesForAllRequests="true">
      <add type="DevExpress.Web.ASPxHttpHandlerModule, DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" name="ASPxHttpHandlerModule" />
    </modules>
  </system.webServer>
  <devExpress>
    <themes enableThemesAssembly="true" styleSheetTheme="" theme="" customThemeAssemblies="" baseColor="" font="" />
    <compression enableHtmlCompression="false" enableCallbackCompression="true" enableResourceCompression="true" enableResourceMerging="true" />
    <settings accessibilityCompliant="false" bootstrapMode="" doctypeMode="Html5" rightToLeft="false" checkReferencesToExternalScripts="true" protectControlState="true" ieCompatibilityVersion="edge" />
    <errors callbackErrorRedirectUrl="" />
    <bootstrap allowClientObjectDeferredInitialization="true" mode="Bootstrap4" iconSet="Embedded" />
  </devExpress>
</configuration>

<%@ Register Assembly="DevExpress.Web.Bootstrap.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" Namespace="DevExpress.Web.Bootstrap" TagPrefix="dx" %>

<%@ Register Assembly="DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" Namespace="DevExpress.Web" TagPrefix="dx" %>




<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="WebForm3.aspx.cs" Inherits="WebApplication2.WebForm3" %>

<%@ Register Assembly="DevExpress.Web.Bootstrap.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" Namespace="DevExpress.Web.Bootstrap" TagPrefix="dx" %>

<%@ Register Assembly="DevExpress.Web.v20.1, Version=20.1.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" Namespace="DevExpress.Web" TagPrefix="dx" %>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <link rel="stylesheet" href="./css1/jquery-ui.css">
    <link rel="stylesheet" href="./css1/ui.jqgrid.css">
    <link rel="stylesheet" href="./css1/bootstrap.min.css">
    <link rel="stylesheet" href="./css1/bootstrap-datetimepicker.min.css">

    <script src="./js1/jquery-2.2.4.min.js"></script>
    <script src="./js1/jquery-ui.min.js"></script>
    <script src="./js1/jquery-migrate-1.2.1.js"></script>
    <script src="./js1/bootstrap.min.js"></script>
    <script src="./js1/moment.min.js"></script>
    <script src="./js1/bootstrap-datetimepicker.min.js"></script>
    <script src="./js1/jquery.jqGrid.src.js"></script>
    <title></title>
     <style type="text/css">
   .roundedBorders {  
    border-radius: 5px;  
    -moz-border-radius: 5px;  
    -khtml-border-radius: 5px;  
    -webkit-border-radius: 5px;  
    overflow: hidden !important;  
    overflow-x: hidden !important;  
    overflow-y: hidden !important;  
 </style>

</head>
<body>
    <form id="form1" runat="server" >
         <dx:ASPxCallbackPanel ID="ASPxCallbackPanel1" runat="server"> 
                <PanelCollection> 
                    <dx:PanelContent runat="server">   
        <div class="container-fluid form-group">
            <div class="panel panel-primary" id="accordion">
                <div class="panel-heading clearfix">
                    <h3 class="panel-title pull-left">
                        <span class="glyphicon glyphicon-edit"></span>
                        <span>填表人资料 Author Information</span>
                    </h3>
                    <h3 class="panel-title pull-right"> 
                       <a aria-controls="head1" aria-expanded="true" data-parent="#accordion" 
                           data-toggle="collapse" href="#head" role="button">
                           <span class="glyphicon glyphicon-collapse-down"></span> 
                       </a>
                    </h3>
                </div>
                <div id="head" class="panel-collapse collapse in">
                   <div class="panel-body">
                    <div class="row">
                        <div>
                            <label class="form-inline">参加单位：<input type="text" class="form-control" /></label>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <label>
                                单号<br />
                                From No</label>
                            <div class="form-group">
                                <input id="txtFromNo" type="text" class="form-control" data-msg="" readonly="readonly" style="text-align: right; width: 100%;">
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4"> 
                            <div class="form-group form-inline">
                                <div style="display: flex; flex-direction: row; justify-content: flex-start; align-items: center">
                                    <label for="Student" style="text-align: left!important;margin-top:10px">Name:</label>
                                    <dx:ASPxRadioButtonList ID="ASPxRadioButtonList1" class="form-control" runat="server" TextAlign="Right" RepeatDirection="Horizontal" RepeatColumns="3"
                                        Style="width: 99%">
                                        <Items>
                                            <dx:ListEditItem Value="0" Selected="True" Text="Yes "></dx:ListEditItem>
                                            <dx:ListEditItem Value="1" Selected="false" Text="No "></dx:ListEditItem>
                                            <dx:ListEditItem Value="2" Selected="false" Text="N/A"></dx:ListEditItem>
                                        </Items>
                                        <Border BorderWidth="0" />
                                        <Border BorderStyle="None" />
                                        <BorderLeft BorderStyle="None" />
                                        <BorderTop BorderStyle="None" />
                                        <BorderRight BorderStyle="None" />
                                        <BorderBottom BorderStyle="None" />
                                    </dx:ASPxRadioButtonList>
                                </div>
                            </div>


                           <%-- <div class="form-group">
                                <label for="State" class="col-md-2 control-label">工号</label>
                                <div class="col-md-10">
                                    <dx:ASPxRadioButtonList ID="ASPxRadioButtonList1" class="form-control" runat="server" TextAlign="Right" RepeatDirection="Horizontal" RepeatColumns="3"
                                        Style="width: 99%">
                                        <Items>
                                            <dx:ListEditItem Value="0" Selected="True" Text="Yes "></dx:ListEditItem>
                                            <dx:ListEditItem Value="1" Selected="false" Text="No "></dx:ListEditItem>
                                            <dx:ListEditItem Value="2" Selected="false" Text="N/A"></dx:ListEditItem>
                                        </Items>
                                        <Border BorderWidth="0" />
                                        <Border BorderStyle="None" />
                                        <BorderLeft BorderStyle="None" />
                                        <BorderTop BorderStyle="None" />
                                        <BorderRight BorderStyle="None" />
                                        <BorderBottom BorderStyle="None" />
                                    </dx:ASPxRadioButtonList>
                                </div>

                                <div class="form-group">
                                    <label for="Name" class="col-md-4 control-label">Name</label>
                                    <div class="col-md-8">
                                        <input id="Name" type="text" class="form-control" />
                                    </div>
                                </div>

                            </div>--%>



                            <%--  <div class="form-group">
                                <label>工号</label>
                                <dx:ASPxRadioButtonList ID="rblBagJulianDate" runat="server" TextAlign="Right" RepeatDirection="Horizontal" RepeatColumns="3"
                                    Style="width: 99%">
                                    <Items>
                                        <dx:ListEditItem Value="0" Selected="True" Text="Yes "></dx:ListEditItem>
                                        <dx:ListEditItem Value="1" Selected="false" Text="No "></dx:ListEditItem>
                                        <dx:ListEditItem Value="2" Selected="false" Text="N/A"></dx:ListEditItem>
                                    </Items>
                                    <Border BorderWidth="0" />
                                    <Border BorderStyle="None" />
                                    <BorderLeft BorderStyle="None" />
                                    <BorderTop BorderStyle="None" />
                                    <BorderRight BorderStyle="None" />
                                    <BorderBottom BorderStyle="None" />
                                </dx:ASPxRadioButtonList>
                            </div>--%>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group form-inline">
                                <div style="display: flex; flex-direction: row; justify-content: flex-start; align-items: center">
                                    <label for="Student" style="text-align: left!important;">Name:</label>
                                    <input name="Student" id="Student" class="form-control" style="text-align: left; margin-left: 10px; width:100%"; />
                                </div>
                            </div>
                            <%--<div class="form-group form-inline">
                                <label for="exampleInputEmail1">Email</label>
                                <input type="text" class="form-control" id="firstname" placeholder="请输入名字" style="text-align: left;">
                            </div>--%>
                           <%-- <div class="form-group">
                                <label for="firstname" class="col-sm-2 control-label">名字</label>
                                <div class="col-sm-10">
                                    <input type="text" class="form-control" id="firstname" placeholder="请输入名字">
                                </div>
                            </div>--%>
                           <%-- <div class="form-group">
                                <label for="State" class="col-md-2">姓名</label>
                                <div class="col-md-10">
                                    <input id="txtCname" type="text" class="form-control" data-msg="" readonly="readonly" style="text-align: right; width: 100%;">
                                </div>
                            </div>--%>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="State" class="col-md-2 control-label">英文名</label>
                                <div class="col-md-10">
                                    <input id="txtEname" type="text" class="form-control" data-msg="" readonly="readonly" style="text-align: right; width: 100%;">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <label>分机 EXT Number</label></span><br />
                            <div class="form-group">
                                <input id="txtExt" type="text" class="form-control" data-msg="" readonly="readonly" style="text-align: right; width: 100%;">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <label>进出口类型 Type of Import/Export</label></span><br />
                            <div class="form-group">
                               
                                <dx:ASPxDropDownEdit ClientInstanceName="checkComboBox" ID="ASPxDropDownEdit1" Width="100%" runat="server" AnimationType="None" class="form-control" Height="34px" CssClass="roundedBorders" >
                                    <DropDownWindowStyle BackColor="#EDEDED" />
                                    <DropDownWindowTemplate>
                                     <%--     <div style="height: 300px; width: 270px; overflow: auto">--%>
                                        <dx:ASPxListBox Width="100%" ID="listBox" ClientInstanceName="checkListBox" SelectionMode="CheckColumn"
                                            runat="server" Height="300" EnableSelectAll="true">
                                            <FilteringSettings ShowSearchUI="true" />
                                            <Border BorderStyle="None" />
                                            <BorderBottom BorderStyle="Solid" BorderWidth="1px" BorderColor="#DCDCDC" />
                                            <Items>
                                                <dx:ListEditItem Text="Chrome" Value="0" Selected="true" />
                                                <dx:ListEditItem Text="Firefox" Value="1" />
                                                <dx:ListEditItem Text="IE" Value="2" />
                                                <dx:ListEditItem Text="Opera" Value="3" />
                                                <dx:ListEditItem Text="Safari" Value="4" Selected="true" />
                                            </Items>
                                         
                                        </dx:ASPxListBox>
                                        <table style="width: 100%">
                                            <tr>
                                                <td style="padding: 4px">
                                                              <dx:ASPxButton ID="ASPxButton1" AutoPostBack="true" runat="server" OnClick="btnTest_Click" Text="Close" Style="float: right">
                                                        </dx:ASPxButton>
                                                             </td>
                                            </tr>
                                        </table>     
                                      <%--  </div>--%>
                                    </DropDownWindowTemplate>
                                 <DropDownWindowStyle BackColor=#EDEDED>
                               </DropDownWindowStyle>
                                </dx:ASPxDropDownEdit>
                          
                                      </div>
                        </div>
                        <div class="col-md-4">
                            <label>填写日期 Apply date</label><br />
                            <div class="form-group">
                    
                                <asp:Button ID="Button1" runat="server" class="btn btn-primary" Text="Button" OnClick="Button1_Click" /> 
                            </div>
                        </div>
                    </div>

                </div>
                </div> 
            </div>
             <div id="divTax2" class="panel panel-primary">

                    <div class="panel panel-primary">
                        <div class="panel-heading clearfix">
                            <h3 class="panel-title pull-left">
                                <span class="glyphicon glyphicon-edit"></span>
                                <span>關務第二次確認</span>
                            </h3>
                            <h3 class="panel-title pull-right"></h3>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <dx:ASPxGridView ID="ASPxGridView1" runat="server"  OnPageIndexChanged="ASPxGridView1_PageIndexChanged" OnDataBinding="ASPxGridView1_DataBinding">
                                        <Columns>
                                            <dx:GridViewDataColumn Caption="LogID" FieldName="col1" />
                                            <dx:GridViewDataColumn Caption="發生時間" FieldName="col2" />
                                        </Columns>
                                        <SettingsPager PageSize="15" />
                                         <%--<Settings VerticalScrollBarMode="Auto" />--%>  
                                        <SettingsBehavior AllowSort="true" SortMode="Value"/>  
                                        <%--<Settings VerticalScrollBarMode="Auto" VerticalScrollBarStyle="Virtual" VerticalScrollableHeight ="300" />--%>
                                                                               
                                    </dx:ASPxGridView>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
        </div>

        <div id="default-popup-control-4" class="popup-target popup-target-sm"></div>
        <dx:BootstrapPopupControl runat="server"  ID="BootstrapPopupControl1" ShowOnPageLoad="false" PopupElementCssSelector="#default-popup-control-4"
            PopupHorizontalAlign="Center" PopupVerticalAlign="Middle" Width="500px" CloseAction="CloseButton"
            AllowResize="true" Modal="true">
            <ContentCollection>
                <dx:ContentControl> 
                </dx:ContentControl>
            </ContentCollection>
        </dx:BootstrapPopupControl>   </dx:PanelContent>
                       </PanelCollection>
      </dx:ASPxCallbackPanel>
    </form>
</body>
</html>
 


 
 
using DevExpress.Web;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebApplication2
{
    public partial class WebForm3 : System.Web.UI.Page
    {
        // DataTable workTable = new DataTable();
        private DataTable workTable
        {
            get 
            {
                return (DataTable)ViewState["uid"];
            }
            set 
            {
                ViewState["uid"] = value; 

            } 
        }
        protected void Page_Load(object sender, EventArgs e)
        {
            //  ASPxDropDownEdit.AdjustDropDownWindow();
            if (!IsPostBack)
            {
                DataTable workTable1 = new DataTable();
                DataColumn dc = new DataColumn("col1", typeof(String));
                workTable1.Columns.Add(dc);

                dc = new DataColumn("col2", typeof(String));
                workTable1.Columns.Add(dc);
  
                DataRow workRow;

                for (int i = 0; i <= 19; i++)
                {
                    workRow = workTable1.NewRow();
                    workRow["col1"] = i;
                    workRow["col2"] = "CustName" + i.ToString();
                    workTable1.Rows.Add(workRow);
                }
                workTable1.AcceptChanges();
                workTable = workTable1;
            }

        }
        protected void btnTest_Click(object sender, EventArgs e)
        {
            string unitStr = string.Empty;
            foreach (ListEditItem item in ((ASPxListBox)ASPxDropDownEdit1.FindControl("listbox")).Items)
            {
                if (item.Selected)
                {
                    unitStr += item.Text + ",";
                }
            }
            unitStr = unitStr.TrimEnd(',');
            // ((ASPxDropDownEdit)ASPxDropDownEdit1.FindControl("ASPxDropDownEdit1")).Text = unitStr;

            ASPxDropDownEdit1.Text= unitStr; ;
        }

        protected void Button1_Click(object sender, EventArgs e)
        {
            //BootstrapPopupControl1.ShowCloseButton = true;
            //BootstrapPopupControl1.HeaderText = "test";
            //BootstrapPopupControl1.Text = "good";
            //BootstrapPopupControl1.ShowOnPageLoad =true;
            
            ASPxGridView1.DataSource = workTable;
            ASPxGridView1.DataBind();
        }

        protected void ASPxGridView1_PageIndexChanged(object sender, EventArgs e)
        {
            var view = sender as ASPxGridView;
            if (view == null) return; 
            ASPxGridView1.PageIndex = view.PageIndex;
            ASPxGridView1.DataSource = workTable;
          //  ASPxGridView1.Settings.VerticalScrollableHeight = 
            ASPxGridView1.DataBind();
        }

        protected void grid_CustomColumnSort (object sender, DevExpress.Web.CustomColumnSortEventArgs e)
        {
            //if (e.Column.FieldName == "Country")
            //{
                e.Handled = true;
                string s1 = e.Value1.ToString(), s2 = e.Value2.ToString();
                if (s1.Length > s2.Length)
                    e.Result = 1;
                else
                    if (s1.Length == s2.Length)
                    e.Result = Comparer.Default.Compare(s1, s2);
                else
                    e.Result = -1;
            //}
        }

        protected void ASPxGridView1_DataBinding(object sender, EventArgs e)
        {
            ASPxGridView1.DataSource = workTable;
        }
    }
}


 <table style="width: 100%">
                <tr>
                    <td style="padding: 4px">
                        <dx:ASPxButton ID="ASPxButton1" AutoPostBack="False" runat="server" Text="Close" style="float: right">
                            <ClientSideEvents Click="function(s, e){ checkComboBox.HideDropDown(); }" />
                        </dx:ASPxButton>
                    </td>
                </tr>
            </table>

<%@ Page Language="C#" AutoEventWireup="true" CodeBehind="Default.aspx.cs" Inherits="Test._Default" %>
 http://kodekodekode.blogspot.com/2013/10/create-dynamic-item-checkbox-on.html
<%@ Register Assembly="DevExpress.Web.v12.2, Version=12.2.7.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" Namespace="DevExpress.Web.ASPxEditors" TagPrefix="dx" %>
 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
 
<html xmlns="http://www.w3.org/1999/xhtml">
<head runat="server">
    <title></title>
</head>
<body>
    <form id="form" runat="server">
        <div>
            <dx:ASPxComboBox ID="cbxM" runat="server" ValueType="System.String" ValueField="ID">
                <Columns>
                    <Dx: ListBoxColumn FieldName = "Name" Caption = "name" />
                </Columns>
            </dx:ASPxComboBox>
            <dx:ASPxListBox ID="listBox" runat="server" ValueType="System.String" SelectionMode="CheckColumn" ValueField="ID" Height="500px" TextField="Name">
                <Columns>
                                         <Dx: ListBoxColumn FieldName = "Name" Caption = "name" />
                </Columns>
            </dx:ASPxListBox>
            <dx:ASPxButton ID="btnTest" runat="server" Text="Test" OnClick="btnTest_Click"></dx:ASPxButton>
        </div>
    </form>
</body>



namespace Test
{
    public partial class _Default : System.Web.UI.Page
    {
        TestEntities ctx = new TestEntities();
        protected void Page_Load(object sender, EventArgs e)
        {
            this.listBox.DataSource = ctx.UnitType;
            this.listBox.DataBind();
            BindMaterial();
        }
 
        private void BindMaterial()
        {
            this.cbxM.DataSource = ctx.Material;
            this.cbxM.DataBind();
        }
 
        protected void btnTest_Click(object sender, EventArgs e)
        {
            string unitStr = string.Empty;
            foreach (ListEditItem item in listBox.Items)
            {
                if (item.Selected)
                {
                    unitStr += item.Value + ",";
                }
            }
            unitStr = unitStr.TrimEnd(',');
            Mapping mapping = new Mapping();
            mapping.MaterialReference.EntityKey = new System.Data.EntityKey("entities.User", "ID", userID);
        }
    }








https://demos.devexpress.com/ASPxEditorsDemos/ASPxDropDownEdit/CheckComboBox.aspx
 objshanudgvHelper.DGVMasterGridClickEvents(Master_shanuDGV, Detail_shanuDGV, Master_shanuDGV.Columns["img"].Index, ShanuEventTypes.cellContentClick, ShanuControlTypes.ImageColumn, detailTableList, "Order_No");
  https://www.programmersought.com/article/43312188461/          
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data;

/// <summary>
/// Author      : Shanu
/// Create date : 2014-11-11
/// Description : ShanuDGVHelper
/// Latest
/// Modifier    : Shanu
/// Modify date : 2014-11-11
/// </summary>
namespace ShanuNestedDataGridView.Helper
{
    class ShanuDGVHelper
    {
        #region Variables
        public DataGridView MasterDGVs = new DataGridView();
        public DataGridView DetailDGVs = new DataGridView();
        List<int> listcolumnIndex;
        static String ImageName = "toggle.png";
        String FilterColumnName = "";
        DataTable DetailgridDT;
        int gridColumnIndex = 0;
       

        DateTimePicker shanuDateTimePicker = new DateTimePicker();
        DataGridView shanuNestedDGV = new DataGridView();
        String EventFucntions;
        # endregion

        //Set all the telerik Grid layout
        #region Layout

        public static void Layouts(DataGridView ShanuDGV, Color BackgroundColor, Color RowsBackColor, Color AlternatebackColor, Boolean AutoGenerateColumns, Color HeaderColor, Boolean HeaderVisual, Boolean RowHeadersVisible, Boolean AllowUserToAddRows)
        {
            //Grid Back ground Color
            ShanuDGV.BackgroundColor = BackgroundColor;

            //Grid Back Color
            ShanuDGV.RowsDefaultCellStyle.BackColor = RowsBackColor;

            //GridColumnStylesCollection Alternate Rows Backcolr
            ShanuDGV.AlternatingRowsDefaultCellStyle.BackColor = AlternatebackColor;

            // Auto generated here set to tru or false.
            ShanuDGV.AutoGenerateColumns = AutoGenerateColumns;
            //  ShanuDGV.DefaultCellStyle.Font = new Font("Verdana", 10.25f, FontStyle.Regular);
            // ShanuDGV.ColumnHeadersDefaultCellStyle.Font = new Font("Calibri", 11, FontStyle.Regular);

            //Column Header back Color
            ShanuDGV.ColumnHeadersDefaultCellStyle.BackColor = HeaderColor;
            //
            ShanuDGV.ColumnHeadersDefaultCellStyle.ForeColor = Color.White;
            //header Visisble
            ShanuDGV.EnableHeadersVisualStyles = HeaderVisual;

            // Enable the row header
            ShanuDGV.RowHeadersVisible = RowHeadersVisible;

            // to Hide the Last Empty row here we use false.
            ShanuDGV.AllowUserToAddRows = AllowUserToAddRows;
        }
        #endregion

        //Add your grid to your selected Control and set height,width,position of your grid.
        #region Variables
        public static void Generategrid(DataGridView ShanuDGV, Control cntrlName, int width, int height, int xval, int yval)
        {
            ShanuDGV.Location = new Point(xval, yval);
            ShanuDGV.Size = new Size(width, height);
            //ShanuDGV.Dock = docktyope.
            cntrlName.Controls.Add(ShanuDGV);
        }
        #endregion

        //Template Column In this column we can add Textbox,Lable,Check Box,Dropdown box and etc
        #region Templatecolumn
        public static void Templatecolumn(DataGridView ShanuDGV, ShanuControlTypes ShanuControlTypes, String cntrlnames, String Headertext, String ToolTipText, Boolean Visible, int width, DataGridViewTriState Resizable, DataGridViewContentAlignment cellAlignment, DataGridViewContentAlignment headerAlignment, Color CellTemplateBackColor, DataTable dtsource, String DisplayMember, String ValueMember, Color CellTemplateforeColor)
        {
            switch (ShanuControlTypes)
            {
                case ShanuControlTypes.CheckBox:
                    DataGridViewCheckBoxColumn dgvChk = new DataGridViewCheckBoxColumn();
                    dgvChk.ValueType = typeof(bool);
                    dgvChk.Name = cntrlnames;

                    dgvChk.HeaderText = Headertext;
                    dgvChk.ToolTipText = ToolTipText;
                    dgvChk.Visible = Visible;
                    dgvChk.Width = width;
                    dgvChk.SortMode = DataGridViewColumnSortMode.Automatic;
                    dgvChk.Resizable = Resizable;
                    dgvChk.DefaultCellStyle.Alignment = cellAlignment;
                    dgvChk.HeaderCell.Style.Alignment = headerAlignment;
                    if (CellTemplateBackColor.Name.ToString() != "Transparent")
                    {
                        dgvChk.CellTemplate.Style.BackColor = CellTemplateBackColor;
                    }
                    dgvChk.DefaultCellStyle.ForeColor = CellTemplateforeColor;
                    ShanuDGV.Columns.Add(dgvChk);
                    break;
                case ShanuControlTypes.BoundColumn:
                    DataGridViewColumn dgvbound = new DataGridViewTextBoxColumn();
                    dgvbound.DataPropertyName = cntrlnames;
                    dgvbound.Name = cntrlnames;
                    dgvbound.HeaderText = Headertext;
                    dgvbound.ToolTipText = ToolTipText;
                    dgvbound.Visible = Visible;
                    dgvbound.Width = width;
                    dgvbound.SortMode = DataGridViewColumnSortMode.Automatic;
                    dgvbound.Resizable = Resizable;
                    dgvbound.DefaultCellStyle.Alignment = cellAlignment;
                    dgvbound.HeaderCell.Style.Alignment = headerAlignment;
                    dgvbound.ReadOnly = true;
                    if (CellTemplateBackColor.Name.ToString() != "Transparent")
                    {
                        dgvbound.CellTemplate.Style.BackColor = CellTemplateBackColor;
                    }
                    dgvbound.DefaultCellStyle.ForeColor = CellTemplateforeColor;
                    ShanuDGV.Columns.Add(dgvbound);
                    break;
                case ShanuControlTypes.TextBox:
                    DataGridViewTextBoxColumn dgvText = new DataGridViewTextBoxColumn();
                    dgvText.ValueType = typeof(decimal);
                    dgvText.DataPropertyName = cntrlnames;
                    dgvText.Name = cntrlnames;
                    dgvText.HeaderText = Headertext;
                    dgvText.ToolTipText = ToolTipText;
                    dgvText.Visible = Visible;
                    dgvText.Width = width;
                    dgvText.SortMode = DataGridViewColumnSortMode.Automatic;
                    dgvText.Resizable = Resizable;
                    dgvText.DefaultCellStyle.Alignment = cellAlignment;
                    dgvText.HeaderCell.Style.Alignment = headerAlignment;
                    if (CellTemplateBackColor.Name.ToString() != "Transparent")
                    {
                        dgvText.CellTemplate.Style.BackColor = CellTemplateBackColor;
                    }
                    dgvText.DefaultCellStyle.ForeColor = CellTemplateforeColor;
                    ShanuDGV.Columns.Add(dgvText);
                    break;
                case ShanuControlTypes.ComboBox:
                    DataGridViewComboBoxColumn dgvcombo = new DataGridViewComboBoxColumn();
                    dgvcombo.ValueType = typeof(decimal);
                    dgvcombo.Name = cntrlnames;
                    dgvcombo.DataSource = dtsource;
                    dgvcombo.DisplayMember = DisplayMember;
                    dgvcombo.ValueMember = ValueMember;
                    dgvcombo.Visible = Visible;
                    dgvcombo.Width = width;
                    dgvcombo.SortMode = DataGridViewColumnSortMode.Automatic;
                    dgvcombo.Resizable = Resizable;
                    dgvcombo.DefaultCellStyle.Alignment = cellAlignment;
                    dgvcombo.HeaderCell.Style.Alignment = headerAlignment;
                    if (CellTemplateBackColor.Name.ToString() != "Transparent")
                    {
                        dgvcombo.CellTemplate.Style.BackColor = CellTemplateBackColor;

                    }
                    dgvcombo.DefaultCellStyle.ForeColor = CellTemplateforeColor;
                    ShanuDGV.Columns.Add(dgvcombo);
                    break;

                case ShanuControlTypes.Button:
                    DataGridViewButtonColumn dgvButtons = new DataGridViewButtonColumn();
                    dgvButtons.Name = cntrlnames;
                    dgvButtons.FlatStyle = FlatStyle.Popup;
                    dgvButtons.DataPropertyName = cntrlnames;
                    dgvButtons.Visible = Visible;
                    dgvButtons.Width = width;
                    dgvButtons.SortMode = DataGridViewColumnSortMode.Automatic;
                    dgvButtons.Resizable = Resizable;
                    dgvButtons.DefaultCellStyle.Alignment = cellAlignment;
                    dgvButtons.HeaderCell.Style.Alignment = headerAlignment;
                    if (CellTemplateBackColor.Name.ToString() != "Transparent")
                    {
                        dgvButtons.CellTemplate.Style.BackColor = CellTemplateBackColor;
                    }
                    dgvButtons.DefaultCellStyle.ForeColor = CellTemplateforeColor;
                    ShanuDGV.Columns.Add(dgvButtons);
                    break;
                case ShanuControlTypes.ImageColumn:
                    DataGridViewImageColumn dgvnestedBtn = new DataGridViewImageColumn();
                    dgvnestedBtn.Name = cntrlnames;
                    ImageName = "expand.png";
                  
                    dgvnestedBtn.Image = Image.FromFile(ImageName);//global::ShanuDGVHelper_Demo.Properties.Resources.toggle;
                    // dgvnestedBtn.DataPropertyName = cntrlnames;
                    dgvnestedBtn.Visible = Visible;
                    dgvnestedBtn.Width = width;
                    dgvnestedBtn.SortMode = DataGridViewColumnSortMode.Automatic;
                    dgvnestedBtn.Resizable = Resizable;
                    dgvnestedBtn.DefaultCellStyle.Alignment = cellAlignment;
                    dgvnestedBtn.HeaderCell.Style.Alignment = headerAlignment;
                    ShanuDGV.Columns.Add(dgvnestedBtn);
                    break;
            }




        }

        #endregion


        // Image Colukmn Click evnet
        #region Image Colukmn Click Event
        public void DGVMasterGridClickEvents(DataGridView ShanuMasterDGV, DataGridView ShanuDetailDGV, int columnIndexs, ShanuEventTypes eventtype, ShanuControlTypes types,DataTable DetailTable,String FilterColumn)
        {
            MasterDGVs = ShanuMasterDGV;
            DetailDGVs = ShanuDetailDGV;
            gridColumnIndex = columnIndexs;
            DetailgridDT = DetailTable;
            FilterColumnName = FilterColumn;
           
            MasterDGVs.CellContentClick += new DataGridViewCellEventHandler(masterDGVs_CellContentClick_Event);


        }
        private void masterDGVs_CellContentClick_Event(object sender, DataGridViewCellEventArgs e)
        {
           
            DataGridViewImageColumn cols = (DataGridViewImageColumn)MasterDGVs.Columns[0];
         
           // cols.Image = Image.FromFile(ImageName);
            MasterDGVs.Rows[e.RowIndex].Cells[0].Value = Image.FromFile("expand.png");

             if (e.ColumnIndex == gridColumnIndex)
             {
                
            
                 if (ImageName == "expand.png")
                 {
                     DetailDGVs.Visible = true;
                     ImageName = "toggle.png";
                     // cols.Image = Image.FromFile(ImageName);
                     MasterDGVs.Rows[e.RowIndex].Cells[e.ColumnIndex].Value = Image.FromFile(ImageName);


                     String Filterexpression = MasterDGVs.Rows[e.RowIndex].Cells[FilterColumnName].Value.ToString();

                     MasterDGVs.Controls.Add(DetailDGVs);

                     Rectangle dgvRectangle = MasterDGVs.GetCellDisplayRectangle(1, e.RowIndex, true);
                     DetailDGVs.Size = new Size(MasterDGVs.Width - 200, 200);
                     DetailDGVs.Location = new Point(dgvRectangle.X, dgvRectangle.Y + 20);


                     DataView detailView = new DataView(DetailgridDT);
                     detailView.RowFilter = FilterColumnName + " = '" + Filterexpression + "'";
                     if (detailView.Count <= 0)
                     {
                         MessageBox.Show("No Details Found");
                     }
                     DetailDGVs.DataSource = detailView;


                 }
                 else
                 {
                     ImageName = "expand.png";
                     //  cols.Image = Image.FromFile(ImageName);
                     MasterDGVs.Rows[e.RowIndex].Cells[e.ColumnIndex].Value = Image.FromFile(ImageName);
                     DetailDGVs.Visible = false;
                 }                 
             }
             else
             {
                 DetailDGVs.Visible = false;
                 
             }
        }
        #endregion

        public void DGVDetailGridClickEvents(DataGridView ShanuDetailDGV)
        {
          
            DetailDGVs = ShanuDetailDGV;

            DetailDGVs.CellContentClick += new DataGridViewCellEventHandler(detailDGVs_CellContentClick_Event);


        }
          private void detailDGVs_CellContentClick_Event(object sender, DataGridViewCellEventArgs e)
          {
              MessageBox.Show("Detail grid Clicked : You clicked on " + DetailDGVs.Rows[e.RowIndex].Cells[e.ColumnIndex].Value);
          }

    }
}
//Enam decalaration for DataGridView Column Type ex like Textbox Column ,Button Column
public enum ShanuControlTypes { BoundColumn, TextBox, ComboBox, CheckBox, DateTimepicker, Button, NumericTextBox, ColorDialog, ImageColumn }
public enum ShanuEventTypes { CellClick, cellContentClick, EditingControlShowing }
