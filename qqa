
https://juejin.cn/post/7136928319450136606
https://github.com/l2999019/GZY.Quartz.MUI/tree/main/GZY.Quartz.MUI
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8">
    <title>Treemap - Neat Zoom Effect</title>
   
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.2.8/d3.min.js"></script>
    <style type="text/css">
        svgbody {
            overflow: hidden;
            margin: 0;
            font-size: 12px;
            font-family: "Helvetica Neue", Helvetica;
        }

        .footer {
            z-index: 1;
            display: block;
            font-size: 26px;
            font-weight: 200;
            text-shadow: 0 1px 0 #fff;
        }

        svg {
            overflow: hidden;
        }

        rect {
            pointer-events: all;
            cursor: pointer;
            stroke: #EEEEEE;
        }

        .chart {
            display: block;
            margin: auto;
        }

        .parent .label {
            color: #FFFFFF;
            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -webkit-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -moz-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
        }

        .labelbody {
            background: transparent;
        }

        .label {
            margin: 2px;
            white-space: pre;
            overflow: hidden;
            text-overflow: ellipsis;
            text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -webkit-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
            -moz-text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.3);
        }

        .child .label {
            white-space: pre-wrap;
            text-align: center;
            text-overflow: ellipsis;
        }

        .cell {
            font-size: 11px;
            cursor: pointer
        }
    </style>
</head>
<body>
<div id="svgbody"></div>
<div class="footer">
    <select>
        <option value="size">Size</option>
        <option value="count">Count</option>
    </select>
</div>
</body>

<script type="text/javascript">
    var isIE = false
    var chartWidth = 550;
    var chartHeight = 550;
    var xscale = d3.scale.linear().range([0, chartWidth]);
    var yscale = d3.scale.linear().range([0, chartHeight]);
    var color = d3.scale.category10();
    var headerHeight = 20;
    var headerColor = "#555555";
    var transitionDuration = 500;
    var root;
    var node;

    var treemap = d3.layout.treemap()
        .round(false)
        .size([chartWidth, chartHeight])
        .sticky(true)
        .value(function(d) {
            return d.size;
        });

    var chart = d3.select("#svgbody")
        .append("svg:svg")
        .attr("width", chartWidth)
        .attr("height", chartHeight)
        .append("svg:g");

    d3.json("http://localhost:4200/assets/flare1.json", function(data) {
        node = root = data;
        var nodes = treemap.nodes(root);

        var children = nodes.filter(function(d) {
            return !d.children;
        });
        var parents = nodes.filter(function(d) {
            return d.children;
        });

        // create parent cells
        var parentCells = chart.selectAll("g.cell.parent")
            .data(parents, function(d) {
                return "p-" + d.name;
            });
        var parentEnterTransition = parentCells.enter()
            .append("g")
            .attr("class", "cell parent")
            .on("click", function(d) {
                zoom(d);
            });
        parentEnterTransition.append("rect")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) { return d.dy; })
            .style("fill", headerColor);
        parentEnterTransition.append('foreignObject')
            .attr("class", "foreignObject")
            .append("xhtml:svgbody")
            .attr("class", "labelbody")
            .append("div")
            .attr("class", "label");
        // update transition
        var parentUpdateTransition = parentCells.transition().duration(transitionDuration);
        parentUpdateTransition.select(".cell")
            .attr("transform", function(d) {
                return "translate(" + d.dx + "," + d.y + ")";
            });
        parentUpdateTransition.select("rect")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) { return d.dy; })
            .style("fill", headerColor);
        parentUpdateTransition.select(".foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) { return d.dy; })
            .select(".labelbody .label")
            .text(function(d) {
                return d.name;
            });
        // remove transition
        parentCells.exit()
            .remove();

        // create children cells
        var childrenCells = chart.selectAll("g.cell.child")
            .data(children, function(d) {
                return "c-" + d.name;
            });
        // enter transition
        var childEnterTransition = childrenCells.enter()
            .append("g")
            .attr("class", "cell child")
            .on("click", function(d) {
                zoom(node === d.parent ? root : d.parent);
            });
        childEnterTransition.append("rect")
            .classed("background", true)
            .style("fill", function(d) {
                return color(d.parent.name);
            });
        childEnterTransition.append('foreignObject')
            .attr("class", "foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) {
                return Math.max(0.01, d.dy);
            })
            .append("xhtml:svgbody")
            .attr("class", "labelbody")
            .append("div")
            .attr("class", "label")
            .text(function(d) {
                return d.name;
            });

        if (isIE) {
            childEnterTransition.selectAll(".foreignObject .labelbody .label")
                .style("display", "none");
        } else {
            childEnterTransition.selectAll(".foreignObject")
                .style("display", "none");
        }

        // update transition
        var childUpdateTransition = childrenCells.transition().duration(transitionDuration);
        childUpdateTransition.select(".cell")
            .attr("transform", function(d) {
                return "translate(" + d.x  + "," + d.y + ")";
            });
        childUpdateTransition.select("rect")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) {
                return d.dy;
            })
            .style("fill", function(d) {
                return color(d.parent.name);
            });
        childUpdateTransition.select(".foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, d.dx);
            })
            .attr("height", function(d) {
                return Math.max(0.01, d.dy);
            })
            .select(".labelbody .label")
            .text(function(d) {
                return d.name;
            });
        // exit transition
        childrenCells.exit()
            .remove();

        d3.select("select").on("change", function() {
            console.log("select zoom(node)");
            treemap.value(this.value == "size" ? size : count)
                .nodes(root);
            zoom(node);
        });

        zoom(node);
    });


    function size(d) {
        return d.size;
    }


    function count(d) {
        return 1;
    }


    //and another one
    function textHeight(d) {
        var ky = chartHeight / d.dy;
        yscale.domain([d.y, d.y + d.dy]);
        return (ky * d.dy) / headerHeight;
    }


    function getRGBComponents (color) {
        var r = color.substring(1, 3);
        var g = color.substring(3, 5);
        var b = color.substring(5, 7);
        return {
            R: parseInt(r, 16),
            G: parseInt(g, 16),
            B: parseInt(b, 16)
        };
    }


    function idealTextColor (bgColor) {
        var nThreshold = 105;
        var components = getRGBComponents(bgColor);
        var bgDelta = (components.R * 0.299) + (components.G * 0.587) + (components.B * 0.114);
        return ((255 - bgDelta) < nThreshold) ? "#000000" : "#ffffff";
    }


    function zoom(d) {
        this.treemap
            .padding([headerHeight/(chartHeight/d.dy), 4, 4, 4])
            .nodes(d);

        // moving the next two lines above treemap layout messes up padding of zoom result
        var kx = chartWidth  / d.dx;
        var ky = chartHeight / d.dy;
        var level = d;

        xscale.domain([d.x, d.x + d.dx]);
        yscale.domain([d.y, d.y + d.dy]);

        if (node != level) {
            if (isIE) {
                chart.selectAll(".cell.child .foreignObject .labelbody .label")
                    .style("display", "none");
            } else {
                chart.selectAll(".cell.child .foreignObject")
                    .style("display", "none");
            }
        }

        var zoomTransition = chart.selectAll("g.cell").transition().duration(transitionDuration)
            .attr("transform", function(d) {
                return "translate(" + xscale(d.x) + "," + yscale(d.y) + ")";
            })
            .each("end", function(d, i) {
                if (!i && (level !== self.root)) {
                    chart.selectAll(".cell.child")
                        .filter(function(d) {
                            return d.parent === self.node; // only get the children for selected group
                        })
                        .select(".foreignObject .labelbody .label")
                        .style("color", function(d) {
                            return idealTextColor(color(d.parent.name));
                        });

                    if (isIE) {
                        chart.selectAll(".cell.child")
                            .filter(function(d) {
                                return d.parent === self.node; // only get the children for selected group
                            })
                            .select(".foreignObject .labelbody .label")
                            .style("display", "")
                    } else {
                        chart.selectAll(".cell.child")
                            .filter(function(d) {
                                return d.parent === self.node; // only get the children for selected group
                            })
                            .select(".foreignObject")
                            .style("display", "")
                    }
                }
            });

        zoomTransition.select(".foreignObject")
            .attr("width", function(d) {
                return Math.max(0.01, kx * d.dx);
            })
            .attr("height", function(d) {
                return d.children ? (ky*d.dy) : Math.max(0.01, ky * d.dy);
            })
            .select(".labelbody .label")
            .text(function(d) {
                return d.name;
            });

        // update the width/height of the rects
        zoomTransition.select("rect")
            .attr("width", function(d) {
                return Math.max(0.01, kx * d.dx);
            })
            .attr("height", function(d) {
                return d.children ? (ky*d.dy) : Math.max(0.01, ky * d.dy);
            })
            .style("fill", function(d) {
                return d.children ? headerColor : color(d.parent.name);
            });

        node = d;

        if (d3.event) {
            d3.event.stopPropagation();
        }
    }
</script>

</html>


https://dotblogs.com.tw/andytsao701/2019/05/12/202720
 https://github.com/videojs/video.js/issues/5724
 Graphics g;
        Pen pen;
        Font font;
        Brush brush;

        int count = 8;
        int rows = 2;

        int width = 100;
        int height = 100;
        int span = 20;

        //Dictionary<int, int> xy = new Dictionary<int, int>();
        private void button1_Click(object sender, EventArgs e)
        {
            try
            {
                //g = this.CreateGraphics();
                pen = new Pen(Color.Black, 3);
                font = new Font("標楷體", 16);
                brush = new SolidBrush(Color.Black);


                int totalwidth = (count / rows) * width + (count / rows + 1) * span;

                int totalheigh = (rows) * 100 + (rows + 1) * span;
                pictureBox1.Width = totalwidth;
                pictureBox1.Height = totalheigh;
                Bitmap bmp = new Bitmap(totalwidth, totalheigh);

                //Graphics g = Graphics.FromImage(bm);
               


                for (int i = 0; i < rows; i++)
                {
                    for (int j = 0; j < count / rows; j++)
                    {
                        var xy = new xy();
                        xy.x = span * (j + 1) + (j > 0 ? width * j : 0);
                        xy.y = span * (i + 1) + (i > 0 ? height * i : 0);
                        lsxy.Add(xy);
                        //xy[span * (i + 1) + (i > 0 ? height * i : 0)] = span * (j + 1) + (j > 0 ? width * j : 0);
                    }

                }

               

                using (Graphics g = Graphics.FromImage(bmp))
                {
                    g.Clear(Color.White);
                    lsxy.ForEach(v =>
                    {
                        g.DrawRectangle(pen, v.x, v.y, width, height);
                    }); bmp.Save(@"c:\test\inx\test2.png", ImageFormat.Png);
                    //using (MemoryStream memoryStream = new MemoryStream())
                    //{
                    //    memoryStream.Seek(0, SeekOrigin.Begin);
                    //    memoryStream.Position = 0;
                    //    using (var png = Image.FromStream(memoryStream,true))
                    //    {
                    //        //png.Save(@"c:\test\inx\test2.jpeg");
                    //    }
                    //    //Save the Watermarked image to the MemoryStream.
                    //    //bmp.Save(memoryStream, ImageFormat.Png);
                    //    //memoryStream.Position = 0;


                    //}
                    bmp.Dispose();
                    g.Dispose();
                    GC.Collect();
                }
 
 <ScrollView Orientation="Both" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">

 
 <dg:DataGridColumn Title="Win" PropertyName="Win" Width="0.7*">
                    <dg:DataGridColumn.CellTemplate>
                        <DataTemplate>
                            <Label x:Name="pbl" Text="{Binding .}" TextColor="Black" />
                        </DataTemplate>
                    </dg:DataGridColumn.CellTemplate>
                </dg:DataGridColumn>
   var ViewModel = new ViewModels.MainViewModel();
            BindingContext = ViewModel;
            var newColumn = new DataGridColumn()
            {
                Title = "Win",
                PropertyName = "Win",
                //HeaderText = $"Distance {i + 1}",
                //MappingName = $"Distances[{i}].Distance",
                Width = new GridLength(0.7, GridUnitType.Star)
            };
            var newColumn1 = pp.Columns[pp.Columns.Count - 1];
            pp.Columns.Remove(newColumn1);
            //////newColumn.Title = "Win";
            //////newColumn.PropertyName = "Win";
            Xamarin.Forms.DataTemplate templateColumn = new Xamarin.Forms.DataTemplate(() =>
            {
                var entry = new Entry()
                {
                    Keyboard = Keyboard.Numeric,
                    TextColor = Color.Black,
                    HorizontalTextAlignment = Xamarin.Forms.TextAlignment.Center,
                    VerticalTextAlignment = Xamarin.Forms.TextAlignment.Center,
                    //Text = "{Binding .}"
                };
                entry.SetBinding(Entry.TextProperty, ".");
                return entry;
            });
            //////newColumn.Title = "kkk";

            newColumn.CellTemplate = templateColumn;

            pp.Columns.Add(newColumn);
            pp.ItemsSource = ((MainViewModel)BindingContext).Teams;







https://www.tektutorialshub.com/crystal-reports/crystal-reports-download-for-visual-studio/
https://www.buildinsider.net/mobile/xamarintips/0008https://stackoverflow.com/questions/44432920/how-can-i-launch-a-android-activity-from-xamarin-forms-page
https://github.com/rvsngh/captureandshare
https://github.com/microwavePC/VoiceRecognitionSample/tree/a2af17ab717531f20b435d8b749df6c67c406382
using Acr.UserDialogs;
using Autofac;
using Autofac.Extras.CommonServiceLocator;
using CommonServiceLocator;
using DataGridSample.Services;
using DataGridSample.ViewModels;
using System;
using Xamarin.Essentials;
using Xamarin.Forms;
namespace DataGridSample
{
    public partial class App : Application
    {
        public static IContainer Container;

        public static void RegisterDependencies(Action<ContainerBuilder> builder)
        {
            //ContainerBuilder containerBuilder = new ContainerBuilder();
            //containerBuilder.RegisterType<BaseViewModel>().AsSelf();
            //containerBuilder.RegisterType<ContactsViewModel>().AsSelf();

            ////  containerBuilder.RegisterType<EmployeeService>().As<IEmployeeService>();
            //containerBuilder.RegisterGeneric(typeof(DataStore<>)).As(typeof(IDataStore<>)).InstancePerRequest();
            //IContainer container = containerBuilder.Build();

            //AutofacServiceLocator autofacServiceLocator = new AutofacServiceLocator(container);
            //ServiceLocator.SetLocatorProvider(() => autofacServiceLocator);

            var containerBuilder = new ContainerBuilder();

            //ViewModels
            containerBuilder.RegisterType<BaseViewModel>().SingleInstance();
            containerBuilder.RegisterType<ContactsViewModel>().AsSelf().SingleInstance();
            //Services
            containerBuilder.RegisterGeneric(typeof(DataStore<>)).As(typeof(IDataStore<>)).SingleInstance();

            //Invoke native dependencies from MainActivity or AppDelegate
            builder.Invoke(containerBuilder);

            Container = containerBuilder.Build();

        }

    
        public App()
        {
            InitializeComponent(); 
            Xamarin.Forms.DataGrid.DataGridComponent.Init();
            MainPage = new NavigationPage(new MainPage());
        }
        private void ConnectivityChanged(object sender, ConnectivityChangedEventArgs e)
        {
            if (e.NetworkAccess != NetworkAccess.Internet)
                UserDialogs.Instance.Toast("Oops, looks like you don't have internet connection :(");
            else
                UserDialogs.Instance.Toast("Your internet connection is back :)");

        }
        protected override void OnStart()
        {
            Connectivity.ConnectivityChanged += ConnectivityChanged;
            // Handle when your app starts
        }

        protected override void OnSleep()
        {
            Connectivity.ConnectivityChanged -= ConnectivityChanged;
            // Handle when your app sleeps
        }

        protected override void OnResume()
        {
            Connectivity.ConnectivityChanged += ConnectivityChanged;
            // Handle when your app resumes
        }
    }
}
https://github.com/jsuarezruiz/XamarinFormsStateTriggers/blob/master/src/XamarinFormsStateTriggers.Sample/Views/NetworkConnectionStateTriggerView.xaml

https://xamgirl.com/handling-connection-changes-in-xamarin-forms/
Upgrade
https://www.c-sharpcorner.com/forums/call-javascript-function-using-submit-button
           <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li><li class="nav-item">
    <input type="submit" value="New" onclick="Enable();">
</li>
</ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2020 - FileUpload.MVC - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script type="text/javascript">
        function Enable() {
            alert("function called");
        }
    </script>


    @RenderSection("Scripts", required: false)



https://github.com/iammukeshm/FileUpload.MVC
https://github.com/TahirNaushad/Fiver.Mvc.FileUpload
Sign in

project2
project2:latest
RUNNING





: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[0]

User profile is available. Using '/root/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.

info: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[58]

Creating key {9d0f423c-206d-421e-84d1-670ec75aa0f8} with creation date 2021-09-28 22:41:57Z, activation date 2021-09-28 22:41:57Z, and expiration date 2021-12-27 22:41:57Z.

warn: Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager[35]

No XML encryptor configured. Key {9d0f423c-206d-421e-84d1-670ec75aa0f8} may be persisted to storage in unencrypted form.

info: Microsoft.AspNetCore.DataProtection.Repositories.FileSystemXmlRepository[39]

Writing data to file '/root/.aspnet/DataProtection-Keys/key-9d0f423c-206d-421e-84d1-670ec75aa0f8.xml'.

Hosting environment: Production

Content root path: /app

Now listening on: http://[::]:80

Application started. Press Ctrl+C to shut down.

info: Microsoft.AspNetCore.Hosting.Internal.WebHost[1]

Request starting HTTP/1.1 GET http://localhost:8080/

info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[3]

Route matched with {action = "Index", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Index() on controller WebApplication1.Controllers.HomeController (WebApplication1).

info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]

Executing action method WebApplication1.Controllers.HomeController.Index (WebApplication1) - Validation state: Valid

info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]

Executed action method WebApplication1.Controllers.HomeController.Index (WebApplication1), returned result Microsoft.AspNetCore.Mvc.ViewResult in 0.3442ms.

info: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[1]

Executing ViewResult, running view Index.

fail: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[3]

The view 'Index' was not found. Searched locations: /Views/Home/Index.cshtml, /Views/Shared/Index.cshtml, /Pages/Shared/Index.cshtml

info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]

Executed action WebApplication1.Controllers.HomeController.Index (WebApplication1) in 23.1365ms

fail: Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware[1]

An unhandled exception has occurred while executing the request.

System.InvalidOperationException: The view 'Index' was not found. The following locations were searched:

/Views/Home/Index.cshtml

/Views/Shared/Index.cshtml

/Pages/Shared/Index.cshtml

at Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(IEnumerable`1 originalLocations)

at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)


at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()

at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)

at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)

at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)

info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[3]

Route matched with {action = "Error", controller = "Home"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult Error() on controller WebApplication1.Controllers.HomeController (WebApplication1).

info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[1]

Executing action method WebApplication1.Controllers.HomeController.Error (WebApplication1) - Validation state: Valid

info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]

Executed action method WebApplication1.Controllers.HomeController.Error (WebApplication1), returned result Microsoft.AspNetCore.Mvc.ViewResult in 1.1939ms.

info: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[1]

Executing ViewResult, running view Error.

fail: Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor[3]

The view 'Error' was not found. Searched locations: /Views/Home/Error.cshtml, /Views/Shared/Error.cshtml, /Pages/Shared/Error.cshtml

info: Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker[2]

Executed action WebApplication1.Controllers.HomeController.Error (WebApplication1) in 3.18ms

fail: Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware[3]

An exception was thrown attempting to execute the error handler.

System.InvalidOperationException: The view 'Error' was not found. The following locations were searched:

/Views/Home/Error.cshtml

/Views/Shared/Error.cshtml

/Pages/Shared/Error.cshtml

at Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(IEnumerable`1 originalLocations)

at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)

at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()

at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)

at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)

at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)

fail: Microsoft.AspNetCore.Server.Kestrel[13]

Connection id "0HMC2Q4S98J77", Request id "0HMC2Q4S98J77:00000001": An unhandled exception was thrown by the application.

System.InvalidOperationException: The view 'Index' was not found. The following locations were searched:

/Views/Home/Index.cshtml

/Views/Shared/Index.cshtml

/Pages/Shared/Index.cshtml

at Microsoft.AspNetCore.Mvc.ViewEngines.ViewEngineResult.EnsureSuccessful(IEnumerable`1 originalLocations)

at Microsoft.AspNetCore.Mvc.ViewFeatures.ViewResultExecutor.ExecuteAsync(ActionContext context, ViewResult result)

at Microsoft.AspNetCore.Mvc.ViewResult.ExecuteResultAsync(ActionContext context)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultAsync(IActionResult result)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResultFilterAsync[TFilter,TFilterAsync]()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResultExecutedContext context)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.ResultNext[TFilter,TFilterAsync](State& next, Scope& scope, Object& state, Boolean& isCompleted)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeResultFilters()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()

at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()

at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)

at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)

at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)

at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware.Invoke(HttpContext context)

at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)

info: Microsoft.AspNetCore.Hosting.Internal.WebHost[2]

Request finished in 153.3636ms 500


Search...
Stick to bottom


FROM mcr.microsoft.com/dotnet/core/aspnet:2.1 AS base
WORKDIR /app
EXPOSE 80

FROM mcr.microsoft.com/dotnet/core/sdk:2.1 AS build
WORKDIR /src
COPY ["WebApplication1/WebApplication1.csproj", "WebApplication1/"]
RUN dotnet restore "WebApplication1/WebApplication1.csproj"
WORKDIR "/src/WebApplication1"
COPY . .

RUN dotnet build "WebApplication1.csproj" -c Release -o /app

FROM build AS publish
RUN dotnet publish "WebApplication1.csproj" -c Release -o /app

FROM base AS final
WORKDIR /app
COPY --from=publish /app .
ENTRYPOINT ["dotnet", "WebApplication1.dll"]

https://www.jquery123.com/mousedown/
  <CollectionView.EmptyView>
                                <ContentView>
                              
                                    <StackLayout HorizontalOptions="CenterAndExpand"
                             VerticalOptions="CenterAndExpand">
                                        <ActivityIndicator x:Name="Loading" IsRunning="{Binding IsBusy}"
                         HorizontalOptions="Center"
                         VerticalOptions="Center"
                         Color="Black"/>
                                        <Label Text="No results matched your filter."   IsVisible="{Binding IsBusy}"
                           Margin="10,25,10,10"
                           FontAttributes="Bold"
                           FontSize="18"
                           HorizontalOptions="Fill"
                           HorizontalTextAlignment="Center" />
                                    </StackLayout>
                                </ContentView>
                            </CollectionView.EmptyView>

docker-compose --env-file ./prd.env config

docker-compose up --env-file=prd.env


FOR /f "tokens=*" %%i IN ('docker volume -f "dangling=true" -q') DO docker rmi %%i -f

FOR /f "tokens=*" %i IN ('docker volume ls -f "dangling=true" -q')


docker build --no-cache -t webapitest .
docker run --name webapitestqqq -d --rm -p 60000:8080 -p 22:22 -v c:/app:/app/Logs webapitest:latest


docker run --name project2 -d --rm -p 80:80 -v c:/app3:/app/Resources/Images project2:latest

docker events -f "image"="webapitest:latest" 
docker run --name nginx-container --mount type=bind source=/etc/nginx/conf.d/default.conf,target=c:/app3/nginx/conf/nginx.conf -p 7777:8081 -d nginxtest
docker run --name nginx-container -v c:/app3/nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf -p 7777:8081 -d nginxtest

# docker run --name mynginx2 --mount type=bind source=/var/www,target=/usr/share/nginx/html,readonly --mount type=bind,source=/var/nginx/conf,target=/etc/nginx/conf,readonly -p 80:80 -d nginx

FROM nginx
RUN rm /etc/nginx/nginx.conf /etc/nginx/conf.d/default.conf
COPY content /usr/share/nginx/html
COPY conf /etc/nginx
VOLUME /usr/share/nginx/html
VOLUME /etc/nginx

# docker run -i -t --volumes-from mynginx4 --name mynginx4_files debian /bin/bash
root@b1cbbad63dd1:/#

ironman-vol:/usr/src/app/app

docker context create remote --docker "host=ssh://Honjay@LAPTOP-2EJJOFO8"
docker context ls
切換至 dev 的 context
docker context use dev

# 切回預設
docker context use default
# 指定 dev
docker -c dev ps

C:\Users\Honjay\source\repos\webapitest>docker build -t webapitest .

 
docker build --no-cache -t project2 -f Dockerfile .
docker run --name project2 -d --rm -p 80:80 project2:latest


docker build --no-cache -t nginx -f Dockerfile_1 .
docker run --name my-nginx -d --rm -p 8888:8081 -p 22111:22111 -v c:/app3/nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf nginxtest:latest

docker run --name nginx -d --rm -p 8888:8081 -p 22111:22111 -v c:/app3/nginx/conf:/etc/nginx/conf.d nginx:latest

docker run --name nginx-container -p 7777:8081 -v index.html:/usr/share/nginx/html:ro -v c:/app3/nginx/conf/nginx.conf:/etc/nginx/conf.d/default.conf -d nginxtest
docker context create remote ‐‐docker "host=ssh://root@192.168.43.166"

docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' f7
docker inspect f7 | findstr '"IPAddress"'   192.168.48.3
docker inspect 01 | findstr '"IPAddress"'   192.168.48.2

ls -al /usr/lib/openssh/sftp-server

RUN apt update \
       && apt install -y --no-install-recommends openssh-server \
       && mkdir -p /run/sshd \
       && echo "root:Docker!" | chpasswd

RUN echo "Port 22" >> /etc/ssh/sshd_config
RUN echo "ListenAddress 0.0.0.0" >> /etc/ssh/sshd_config
RUN echo "LoginGraceTime 180" >> /etc/ssh/sshd_config
RUN echo "X11Forwarding yes" >> /etc/ssh/sshd_config
RUN echo "Ciphers aes128-cbc,3des-cbc,aes256-cbc,aes128-ctr,aes192-ctr,aes256-ctr" >> /etc/ssh/sshd_config


RUN echo "MACs hmac-sha1,hmac-sha1-96" >> /etc/ssh/sshd_config
RUN echo "StrictModes yes" >> /etc/ssh/sshd_config
RUN echo "SyslogFacility DAEMON" >> /etc/ssh/sshd_config
RUN echo "PasswordAuthentication yes" >> /etc/ssh/sshd_config
RUN echo "PermitRootLogin yes" >> /etc/ssh/sshd_config
RUN echo "Subsystem sftp internal-sftp" >> /etc/ssh/sshd_config

 Port                            2222
 ListenAddress                   0.0.0.0
 LoginGraceTime                  180
 X11Forwarding                   yes
 Ciphers aes128-cbc,3des-cbc,aes256-cbc,aes128-ctr,aes192-ctr,aes256-ctr
 MACs hmac-sha1,hmac-sha1-96
 StrictModes                     yes
 SyslogFacility                  DAEMON
 PasswordAuthentication          yes
 PermitEmptyPasswords            no
 PermitRootLogin                 yes
 Subsystem sftp internal-sftp


docker-compose --env-file ./%target% config

version: '3.4'

services:
  webapitest1:
    container_name: webapitest-1
    image: ${DOCKER_REGISTRY-}webapitest1:latest
    build:
      context: .
      dockerfile: webapitest/Dockerfile
    restart: always
    ports:
      - "5001:80"
    volumes:
      - ./appsettings.json:/app/appsettings.json
  #myproject-nginx:
  #  container_name: my-nginx
  #  image: nginx
  #  restart: always
  #  ports:
  #    - "80:80"
  #  volumes:
  #    - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf

  myproject-redis:
    container_name: my-redis
    image: redis
    restart: always
    ports:
      - "6379:80"
    volumes:
      - ./conf/redis.conf:/etc/redis/redis.conf

 -v portainer_data:/data 
docker volume create portainer_data
docker run -d -p 19000:9000 --name portainer --net=webapitest_backend -v "/var/run/docker.sock:/var/run/docker.sock" -v c:/app3/portainer-ce/data:/data --restart=always portainer/portainer-ce


$ docker run -d -p 9000:9000 -p 8000:8000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v /path/on/host/data:/data portainer/portainer



docker run -d -p 19000:9000 -p 18000:8000 --restart always -v c:/app3/run:/var/run -v c:/app3/portainer-ce/data:/data --name portainer-ce portainer/portainer-ce

docker run -d -p 19000:9000 -p 18000:8000 --restart always -v \\.\pipe\docker_engine:\\.\pipe\docker_engin -v c:/app3/opt/docker/portainer-ce/data:/data --name portainer-ce portainer/portainer-ce



docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce

已有，開發需要時要有權限下載套件
前端
netsh interface portproxy delete v4tov4 listenaddress=10.0.75.1 listenport=2375

# Use the Nginx image
FROM nginx  
# Remove the default nginx.conf
RUN rm /etc/nginx/conf.d/default.conf

# Replace with our own nginx.conf
COPY nginx/nginx.conf /etc/nginx/conf.d/

#Set time zone
ENV TZ=Asia/Taipei
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
EXPOSE 8081 22
RUN apt-get update && apt-get install -y iputils-ping
RUN apt-get update && apt-get install net-tools    
     
RUN apt update \
       && apt install -y --no-install-recommends openssh-server \
       && mkdir -p /run/sshd \
       && echo "root:Docker!" | chpasswd 
 
apt-get install curl -y

安裝檔案
docker desktop
nodejs
nuget

vistal studio installer
-node.js development
-net core cross-platform development







docker swarm init


docker service create --name webapitestservice --publish 5000:8080 webapitest 

docker service scale webapitestservice=3


docker service ls


docker service scale webapitestservice=1


docker service webapitestservice


docker network create agent_network -d overlay
docker stack deploy --compose-file docker-portainer.yml portainer
docker stack rm webapitest

docker-compose -f ./docker-compose.yml build --no-cache
docker stack deploy --compose-file=docker-compose.yml webapitest --resolve-image never


docker container ls

docker network connect portainer_agent-network 813e0cfb1f19

curl http://webapi:8080/WeatherForecast




#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.

FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base
WORKDIR /app
EXPOSE 80 443
ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8
RUN mkdir -p /app/Resources/Images
FROM mcr.microsoft.com/dotnet/sdk:5.0 AS build
#Installing nodejs
#RUN apt-get update -yq \
    #&& apt-get install curl gnupg -yq \
    #&& curl -sL https://deb.nodesource.com/setup_16.x | bash \
    #&& apt-get install nodejs -yq


WORKDIR /src
COPY ["Project2.csproj", "."]
RUN dotnet restore "./Project2.csproj"
COPY . .
WORKDIR "/src/."

RUN dotnet build "Project2.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "Project2.csproj" -c Release -o /app/publish

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "Project2.dll"]


docker builder prune -af
